/* 시퀀스 생성 */
CREATE SEQUENCE SEQ_USER;
CREATE SEQUENCE SEQ_ARTIST;
CREATE SEQUENCE SEQ_SHOW;
CREATE SEQUENCE SEQ_WORK;
CREATE SEQUENCE SEQ_RECRUITMENT;
CREATE SEQUENCE SEQ_PAYMENT;
CREATE SEQUENCE SEQ_ARTIST_REPLY_NUMBER;
CREATE SEQUENCE SEQ_USER_SHOW_REPLY_NUMBER;

/* 테이블만 생성 */
CREATE TABLE TBL_USER(
	USER_NUMBER NUMBER PRIMARY KEY,
	USER_ID VARCHAR2(1000),
	USER_PW VARCHAR2(1000),
	USER_NAME VARCHAR2(1000),
	USER_PHONE_NUMBER VARCHAR2(1000),
	USER_EMAIL VARCHAR2(1000),
	USER_ARTIST_STATUS NUMBER DEFAULT 3,
	USER_REGISTER_DATE DATE DEFAULT SYSDATE,
	USER_STATUS NUMBER DEFAULT 1
);

CREATE TABLE TBL_USER_FILE (
	USER_NUMBER NUMBER,
	UUID VARCHAR2(1000) PRIMARY KEY,
   	UPLOAD_PATH VARCHAR2(1000),
   	FILE_NAME VARCHAR2(2000)
);

CREATE TABLE TBL_ARTIST (
	ARTIST_NUMBER NUMBER PRIMARY KEY,
	USER_NUMBER NUMBER,
	ARTIST_NAME VARCHAR2(1000),
	ARTIST_DESCRIPTION VARCHAR2(1000),
	ARTIST_TYPE NUMBER,
	ARTIST_DONATION VARCHAR2(1000),
	ARTIST_ACCOUNT VARCHAR2(1000),
	ARTIST_STATUS NUMBER DEFAULT 1
);

CREATE TABLE TBL_ARTIST_REPLY (
	REPLY_NUMBER NUMBER PRIMARY KEY,
	USER_NUMBER NUMBER,
	ARTIST_NUMBER NUMBER,
	REPLY_CONTENT VARCHAR2(1000),
	REPLY_REGISTER_DATE DATE DEFAULT SYSDATE,
	REPLY_UPDATE_DATE DATE DEFAULT SYSDATE
);

CREATE TABLE TBL_ARTIST_FILE (
	ARTIST_NUMBER NUMBER,
	UUID VARCHAR2(1000) PRIMARY KEY,
   	UPLOAD_PATH VARCHAR2(1000),
   	FILE_NAME VARCHAR2(2000)
);

CREATE TABLE TBL_SHOW (
	SHOW_NUMBER NUMBER PRIMARY KEY,
	ARTIST_NUMBER NUMBER,
	SHOW_NAME VARCHAR2(1000),
	SHOW_CONTENT VARCHAR2(1000),
	SHOW_DAY DATE DEFAULT SYSDATE,
	SHOW_TIME DATE DEFAULT SYSDATE,
	SHOW_ADDRESS VARCHAR2(1000),
	SHOW_LOCATION VARCHAR2(1000),
	SHOW_TYPE NUMBER
);

CREATE TABLE TBL_SHOW_REPLY (
	REPLY_NUMBER NUMBER PRIMARY KEY,
	USER_NUMBER NUMBER,
	SHOW_NUMBER NUMBER,
	REPLY_CONTENT VARCHAR2(1000),
	REPLY_REGISTER_DATE DATE DEFAULT SYSDATE,
	REPLY_UPDATE_DATE DATE DEFAULT SYSDATE
);

CREATE TABLE TBL_SHOW_FILE (
	SHOW_NUMBER NUMBER,
	UUID VARCHAR2(1000) PRIMARY KEY,
   	UPLOAD_PATH VARCHAR2(1000),
   	FILE_NAME VARCHAR2(2000)
);

CREATE TABLE TBL_WORK (
	WORK_NUMBER NUMBER PRIMARY KEY,
	ARTIST_NUMBER NUMBER,
	WORK_NAME VARCHAR2(1000),
	WORK_GENRE VARCHAR2(1000),
	WORK_DESCRIPTION VARCHAR2(1000),
	WORK_YOUTUBE_URL VARCHAR2(1000),
	WORK_PURCHASE_URL VARCHAR2(1000),
	WORK_TAG VARCHAR2(1000),
	WORK_RELEASE_DATE VARCHAR2(1000),
	WORK_REGISTER_DATE DATE DEFAULT SYSDATE,
	WORK_UPDATE_DATE DATE DEFAULT SYSDATE,
	WORK_STATUS NUMBER DEFAULT 1
);

CREATE TABLE TBL_WORK_FILE (
	WORK_NUMBER NUMBER,
	UUID VARCHAR2(1000) PRIMARY KEY,
   	UPLOAD_PATH VARCHAR2(1000),
   	FILE_NAME VARCHAR2(2000)
);

CREATE TABLE TBL_RECRUITMENT (
	RECRUITMENT_NUMBER NUMBER PRIMARY KEY,
	RECRUITMENT_NAME VARCHAR2(1000),
	RECRUITMENT_LOCATION VARCHAR2(1000),
	RECRUITMENT_DAY VARCHAR2(1000),
	RECRUITMENT_TIME VARCHAR2(1000),
	RECRUITMENT_URL VARCHAR2(1000),
	RECRUITMENT_TYPE VARCHAR2(1000),
	RECRUITMENT_SUMMARY VARCHAR2(1000),
	RECRUITMENT_CONDITION VARCHAR2(1000),
	RECRUITMENT_INTRODUCE VARCHAR2(1000),
	RECRUITMENT_HOST VARCHAR2(1000),
	RECRUITMENT_REGISTER_DATE DATE DEFAULT SYSDATE,
	RECRUITMENT_UPDATE_DATE DATE DEFAULT SYSDATE
);

CREATE TABLE TBL_RECRUITMENT_FILE (
	RECRUITMENT_NUMBER NUMBER,
	UUID VARCHAR2(1000) PRIMARY KEY,
   	UPLOAD_PATH VARCHAR2(1000),
   	FILE_NAME VARCHAR2(2000)
);

CREATE TABLE TBL_LIKE (
	USER_NUMBER NUMBER,
	ARTIST_NUMBER NUMBER,
	WORK_NUMBER NUMBER,
	LIKE_DATE DATE DEFAULT SYSDATE,
	LIKE_CATEGORY VARCHAR2(1000)
);

/* payment 테이블 */
-- api에 따라 달라지기땜에 나중에 다시 만듭시다
--CREATE TABLE TBL_PAYMENT (
--	PAYMENT_NUMBER NUMBER PRIMARY KEY,
--	USER_NUMBER NUMBER,
--	ARTIST_NUMBER NUMBER,
--	PAYMENT_PG VARCHAR2(1000),
--	PAYMENT_TYPE VARCHAR2(1000),
--	PAYMENT_DATA VARCHAR2(1000),
--	DONATION_MESSAGE VARCHAR2(1000),
--	PAYMENT_DATETIME DATE DEFAULT SYSDATE
--);


/* 아티스트 - 공연 연결 */
ALTER TABLE TBL_SHOW
ADD CONSTRAINT FK_SHOW_ARTIST_NUMBER
FOREIGN KEY(ARTIST_NUMBER) REFERENCES TBL_ARTIST(ARTIST_NUMBER)
ON DELETE CASCADE;

/* 아티스트 - 작품 연결 */
ALTER TABLE TBL_WORK
ADD CONSTRAINT FK_WORK_ARTIST_NUMBER
FOREIGN KEY(ARTIST_NUMBER) REFERENCES TBL_ARTIST(ARTIST_NUMBER)
ON DELETE CASCADE;


/* 아티스트 댓글 */
/* 아티스트 번호 연결 */
ALTER TABLE TBL_ARTIST_REPLY
ADD CONSTRAINT FK_ARTIST_REPLY_ARTIST_NUMBER
FOREIGN KEY(ARTIST_NUMBER) REFERENCES TBL_ARTIST(ARTIST_NUMBER)
ON DELETE CASCADE;

/* 회원 번호 연결 */
ALTER TABLE TBL_ARTIST_REPLY
ADD CONSTRAINT FK_ARTIST_REPLY_USER_NUMBER
FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER)
ON DELETE CASCADE;


/* 공연 댓글 */
/* 공연 번호 연결 */
ALTER TABLE TBL_SHOW_REPLY
ADD CONSTRAINT FK_SHOW_REPLY_SHOW_NUMBER
FOREIGN KEY(SHOW_NUMBER) REFERENCES TBL_SHOW(SHOW_NUMBER)
ON DELETE CASCADE;

/* 회원 번호 연결 */
ALTER TABLE TBL_SHOW_REPLY
ADD CONSTRAINT FK_SHOW_REPLY_USER_NUMBER
FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER)
ON DELETE CASCADE;

/* 파일 연결 */
/* 아티스트 파일 */
ALTER TABLE TBL_ARTIST_FILE
ADD CONSTRAINT FK_FILE_ARTIST_NUMBER
FOREIGN KEY(ARTIST_NUMBER) REFERENCES TBL_ARTIST(ARTIST_NUMBER)
ON DELETE CASCADE;

/* 공연 파일 */
ALTER TABLE TBL_SHOW_FILE
ADD CONSTRAINT FK_FILE_SHOW_NUMBER
FOREIGN KEY(SHOW_NUMBER) REFERENCES TBL_SHOW(SHOW_NUMBER)
ON DELETE CASCADE;

/* 작품 파일 */
ALTER TABLE TBL_WORK_FILE
ADD CONSTRAINT FK_FILE_WORK_NUMBER
FOREIGN KEY(WORK_NUMBER) REFERENCES TBL_WORK(WORK_NUMBER)
ON DELETE CASCADE;

/* 모집공고 파일 */
ALTER TABLE TBL_RECRUITMENT_FILE
ADD CONSTRAINT FK_FILE_RECRUITMENT_NUMBER
FOREIGN KEY(RECRUITMENT_NUMBER) REFERENCES TBL_RECRUITMENT(RECRUITMENT_NUMBER)
ON DELETE CASCADE;

/* 회원 파일 */
ALTER TABLE TBL_USER_FILE
ADD CONSTRAINT FK_FILE_USER_NUMBER
FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER)
ON DELETE CASCADE;

/* 결제 */
/* 결제 - 회원 연결 */
--ALTER TABLE TBL_PAYMENT
--ADD CONSTRAINT FK_PAYMENT_USER_NUMBER
--FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER)
--ON DELETE CASCADE;
--
--/* 결제 - 아티스트 연결 */
--ALTER TABLE TBL_PAYMENT
--ADD CONSTRAINT FK_PAYMENT_ARTIST_NUMBER
--FOREIGN KEY(ARTIST_NUMBER) REFERENCES TBL_ARTIST(ARTIST_NUMBER)
--ON DELETE CASCADE;


/* 좋아요 */
/* 좋아요 - 회원 연결 */
ALTER TABLE TBL_LIKE
ADD CONSTRAINT FK_LIKE_USER_NUMBER
FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER)
ON DELETE CASCADE;

/* 좋아요 - 아티스트 연결 */
ALTER TABLE TBL_LIKE
ADD CONSTRAINT FK_LIKE_ARTIST_NUMBER
FOREIGN KEY(ARTIST_NUMBER) REFERENCES TBL_ARTIST(ARTIST_NUMBER)
ON DELETE CASCADE;


/* 좋아요 - 작품 연결 */
ALTER TABLE TBL_LIKE
ADD CONSTRAINT FK_LIKE_WORK_NUMBER
FOREIGN KEY(WORK_NUMBER) REFERENCES TBL_WORK(WORK_NUMBER)
ON DELETE CASCADE;

 /* 제약 조건 (FOREIGN KEY) */
/* 회원 - 아티스트 연결 */
ALTER TABLE TBL_ARTIST
ADD CONSTRAINT FK_ARTIST_USER_NUMBER
FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER)
ON DELETE CASCADE;
