<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pickitup.mapper.user.OrderMapper">

    <select id="getList" resultType="orderDTO">

            SELECT RN, ORDERNUM, ORDER_NAME, EMAIL, PHONE, ADDRESS, PRODUCTNUM, PRODUCTNAME, MANUFACTURER, SUPPLIER, REGIST_DATE, STATUS,PRICE,CATEGORY
            FROM
            (
            SELECT
            ROWNUM RN,TBL_ORDER.NUM AS ORDERNUM,TBL_USER.NICKNAME AS ORDER_NAME ,TBL_USER.EMAIL AS EMAIL,TBL_USER.PHONE AS PHONE ,TBL_USER.ADDRESS AS ADDRESS,TBL_PRODUCT.NUM AS PRODUCTNUM,TBL_PRODUCT.NAME AS PRODUCTNAME,TBL_PRODUCT.MANUFACTURER  AS  MANUFACTURER,TBL_PRODUCT.SUPPLIER AS SUPPLIER,TBL_ORDER.REGIST_DATE AS REGIST_DATE,TBL_ORDER.STATUS AS STATUS,TBL_PRODUCT.PRICE AS PRICE,TBL_PRODUCT.CATEGORY AS CATEGORY
            FROM TBL_USER,TBL_ORDER,TBL_PRODUCT
            WHERE TBL_ORDER.USER_NUM  = TBL_USER.NUM
            AND TBL_ORDER.PRODUCT_NUM = TBL_PRODUCT.NUM
            <![CDATA[
            AND ROWNUM <= #{pageNum} * #{amount}
            )
            WHERE RN >(#{pageNum} - 1) * #{amount}
            ]]>

            <choose>
                <when test="type == 'orderNum'.toString()">
                    AND ORDERNUM LIKE '%'||#{keyword}||'%'
                </when>
                <when test="type == 'nickname'.toString()">
                    AND NICKNAME LIKE '%'||#{keyword}||'%'
                </when>
                <when test="type == 'email'.toString()">
                    AND EMAIL LIKE '%'||#{keyword}||'%'
                </when>
                <when test="type == 'phone'.toString()">
                    AND PHONE LIKE '%'||#{keyword}||'%'
                </when>
                <when test="type == 'address'.toString()">
                    AND ADDRESS LIKE '%'||#{keyword}||'%'
                </when>
            </choose>
            <choose>
                <when test="type1 == 'productName'.toString()">
                    AND PRODUCTNAME LIKE '%'||#{keyword1}||'%'
                </when>
                <when test="type1 == 'productNum'.toString()">
                    AND PRODUCTNUM LIKE '%'||#{keyword1}||'%'
                </when>
                <when test="type1 == 'manufacturer'.toString()">
                    AND MANUFACTURER LIKE '%'||#{keyword1}||'%'
                </when>
                <when test="type1 == 'supplier'.toString()">
                    AND SUPPLIER LIKE '%'||#{keyword1}||'%'
                </when>
            </choose>
            <choose>
                <when test="startDate != null">
                    AND (REGIST_DATE BETWEEN #{startDate} AND #{endDate})
                </when>
            </choose>
            ORDER BY REGIST_DATE DESC
    </select>


    <select id="getListToday" resultType="orderDTO">
        SELECT
        TBL_ORDER.NUM AS ORDERNUM,TBL_USER.NICKNAME AS NICKNAME ,TBL_USER.EMAIL AS EMAIL,TBL_USER.PHONE AS PHONE ,TBL_USER.ADDRESS AS ADDRESS,TBL_PRODUCT.NUM AS PRODUCTNUM,TBL_PRODUCT.NAME AS PRODUCTNAME,TBL_PRODUCT.MANUFACTURER  AS  MANUFACTURER,TBL_PRODUCT.SUPPLIER AS SUPPLIER,TBL_ORDER.REGIST_DATE AS REGIST_DATE,TBL_ORDER.STATUS AS STATUS,TBL_PRODUCT.PRICE AS PRICE,TBL_PRODUCT.CATEGORY AS CATEGORY
        FROM TBL_USER,TBL_ORDER,TBL_PRODUCT
        WHERE TBL_ORDER.USER_NUM  = TBL_USER.NUM
        AND TBL_ORDER.PRODUCT_NUM = TBL_PRODUCT.NUM
--         <![CDATA[
--         AND (TO_CHAR(TBL_ORDER.REGIST_DATE,'yyyy-mm-dd hh24:mi:ss') >=(TO_CHAR(SYSDATE ,'yyyy-mm-dd')||'00:00:00')
--         AND TO_CHAR(TBL_ORDER.REGIST_DATE,'yyyy-mm-dd hh24:mi:ss') <= (TO_CHAR(SYSDATE-30,'yyyy-mm-dd')||'23:59:59'))
--         ]]>

        <![CDATA[
        AND TO_CHAR(TBL_ORDER.REGIST_DATE,'yyyy-mm-dd hh24:mi:ss') >= (#{startDate}||'00:00:00')
        AND TO_CHAR(TBL_ORDER.REGIST_DATE,'yyyy-mm-dd hh24:mi:ss') <= (#{endDate}||'23:59:59')
        ]]>
        ORDER BY REGIST_DATE DESC
    </select>



    <select id="getTotal" resultType="_int">

        SELECT COUNT(NICKNAME)
        FROM
        (
        SELECT
        ROWNUM RN,TBL_ORDER.NUM AS ORDERNUM,TBL_USER.NICKNAME AS NICKNAME ,TBL_USER.EMAIL AS EMAIL,TBL_USER.PHONE AS PHONE ,TBL_USER.ADDRESS AS ADDRESS,TBL_PRODUCT.NUM AS PRODUCTNUM,TBL_PRODUCT.NAME AS PRODUCTNAME,TBL_PRODUCT.MANUFACTURER  AS  MANUFACTURER,TBL_PRODUCT.SUPPLIER AS SUPPLIER,TBL_ORDER.REGIST_DATE AS REGIST_DATE,TBL_ORDER.STATUS AS STATUS
        FROM TBL_USER,TBL_ORDER,TBL_PRODUCT
        WHERE TBL_ORDER.USER_NUM  = TBL_USER.NUM
        AND TBL_ORDER.PRODUCT_NUM = TBL_PRODUCT.NUM
        <![CDATA[
            AND ROWNUM <= #{pageNum} * #{amount}
            )
            WHERE RN >(#{pageNum} - 1) * #{amount}
            ]]>
        <choose>
            <when test="type == 'orderNum'.toString()">
                AND ORDERNUM LIKE '%'||#{keyword}||'%'
            </when>
            <when test="type == 'nickname'.toString()">
                AND NICKNAME LIKE '%'||#{keyword}||'%'
            </when>
            <when test="type == 'email'.toString()">
                AND EMAIL LIKE '%'||#{keyword}||'%'
            </when>
            <when test="type == 'phone'.toString()">
                AND PHONE LIKE '%'||#{keyword}||'%'
            </when>
            <when test="type == 'address'.toString()">
                AND ADDRESS LIKE '%'||#{keyword}||'%'
            </when>
        </choose>
        <choose>
            <when test="type1 == 'productName'.toString()">
                AND PRODUCTNAME LIKE '%'||#{keyword1}||'%'
            </when>
            <when test="type1 == 'productNum'.toString()">
                AND PRODUCTNUM LIKE '%'||#{keyword1}||'%'
            </when>
            <when test="type1 == 'manufacturer'.toString()">
                AND MANUFACTURER LIKE '%'||#{keyword1}||'%'
            </when>
            <when test="type1 == 'supplier'.toString()">
                AND SUPPLIER LIKE '%'||#{keyword1}||'%'
            </when>
        </choose>
        <choose>
            <when test="startDate != null">
                AND (REGIST_DATE BETWEEN #{startDate} AND #{endDate})
            </when>
        </choose>
    </select>


<!--    <select id="getList" resultType="orderVO">-->
<!--        <![CDATA[-->
<!--            SELECT ROWNUM RN, NUM, TOTAL, COUNTING, REGIST_DATE, PRODUCT_NUM, USER_NUM, STATUS-->
<!--            FROM (-->
<!--            SELECT  /*+ INDEX_DESC(TBL_USER SYS_C007334) */-->
<!--            ROWNUM RN, NUM, TOTAL, COUNTING, REGIST_DATE, PRODUCT_NUM, USER_NUM, STATUS-->
<!--            FROM TBL_ORDER-->
<!--            WHERE ROWNUM <= #{pageNum} * #{amount}-->
<!--            ORDER BY REGIST_DATE DESC-->
<!--            )-->
<!--            WHERE RN >(#{pageNum} - 1) * #{amount}-->
<!--        ]]>-->
<!--    </select>-->




<!--    <select id="getList" resultType="boardVO">
        <![CDATA[
        SELECT BOARD_BNO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER, BOARD_REGISTER_DATE, BOARD_UPDATE_DATE
        FROM
        (
            SELECT /*+ INDEX_DESC(TBL_BOARD SYS_C007186) */
            ROWNUM RN, BOARD_BNO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER, BOARD_REGISTER_DATE, BOARD_UPDATE_DATE
            FROM TBL_BOARD
            WHERE
        ]]>
            <trim prefix="(" prefixOverrides="OR" suffix=") AND">
                <foreach item="type" collection="types">
                    <trim prefix="OR">
                        <choose>
                            <when test="type == 'T'.toString()">
                                (BOARD_TITLE LIKE '%'||#{keyword}||'%')
                            </when>
                            <when test="type == 'C'.toString()">
                                (BOARD_CONTENT LIKE '%'||#{keyword}||'%')
                            </when>
                            <when test="type == 'W'.toString()">
                                (BOARD_WRITER LIKE '%'||#{keyword}||'%')
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </trim>
        <![CDATA[
            ROWNUM <= #{pageNum} * #{amount}
        )
        WHERE RN > (#{pageNum} - 1) * #{amount}
        ]]>
    </select>-->


    <select id="getDetail" resultType="userVo">
        SELECT  ONUM, TOTAL, COUNTING, OREGISTDATE,USERNUM,PRODUCTNUM PRODUCTNAME, PRODUCTPRICE
        FROM (
        SELECT O.NUM ONUM, O.TOTAL TOTAL, COUNTING COUNTING, O.REGIST_DATE OREGISTDATE, O.USER_NUM USERNUM,O.PRODUCT_NUM PRODUCTNUM, P.NAME PRODUCTNAME, P.PRICE PRODUCTPRICE
            FROM TBL_ORDER O JOIN TBL_PRODUCT P ON O.PRODUCT_NUM=P.NUM
            WHERE USER_NUM =#{userNum}
            )
        WHERE PRODUCTNUM=#{productNum}
    </select>

    <insert id="insert">
        INSERT INTO TBL_ORDER
        (NUM, TOTAL, COUNTING, PRODUCT_NUM, USER_NUM, REGIST_DATE,ADDRESS_COMMENT,ADDRESS,ADDRESS_DETAIL)
        VALUES(SEQ_ORDER.NEXTVAL, #{total}, #{counting}, #{productNum}, #{userNum}, SYSDATE#{addressComment},#{address},#{addressDetail})
    </insert>

    <delete id="delete">
        DELETE FROM TBL_ORDER
        WHERE NUM=#{num}
    </delete>

    <select id="countOrder" resultType="_int">
    SELECT COUNT(NUM)
    FROM TBL_ORDER
    </select>

    <select id="countProductOrder" resultType="_int">
    SELECT COUNT(NUM)
    FROM TBL_ORDER
    WHERE PRODUCT_NUM=#{productNum}
    </select>


    <select id="boughtItem" resultType="orderVO">
        SELECT NUM, TOTAL, COUNTING, REGIST_DATE, PRODUCT_NUM, USER_NUM, STATUS, ADDRESS_COMMENT
        FROM TBL_ORDER
        WHERE USER_NUM = #{userNum} AND STATUS = '1'
    </select>

    <resultMap id="UserVO" type="UserVO">
        <result column="NICKNAME" property="nickname"/>
        <result column="PHONE" property="phone"/>
        <result column="ADDRESS" property="ADDRESS"/>
        <result column="ADDRESS_DETAIL" property="addressDetail"/>
        <result column="POINT" property="point"/>
    </resultMap>
    <resultMap id="ProductVO" type="ProductVO">
        <result column="NAME" property="name"/>
        <result column="PRICE" property="price"/>
    </resultMap>


    <select id="order" resultType="string" parameterType="java.lang.String">
        SELECT
        U.NUM,U.NICKNAME,U.PHONE,U.ADDRESS,U.ADDRESS_DETAIL,U.POINT,P.NAME,P.PRICE,P.NUM,
        O.NUM,O.USER_NUM,O.PRODUCT_NUM,O.TOTAL,O.COUNTING,O.STATUS,O.USER_COMMENT
        FROM TBL_USER U ,TBL_PRODUCT P,TBL_ORDER O
        WHERE U.NUM=O.USER_NUM
        AND P.NUM=O.PRODUCT_NUM
    </select>



    <!--    <select id="order" parameterType="_int" resultType="OrderVO">-->
    <!--        SELECT-->
    <!--        U.NUM,U.NICKNAME,U.PHONE,U.ADDRESS,U.ADDRESS_DETAIL,U.POINT,P.NAME,P.PRICE-->
    <!--        FROM TBL_USER U, TBL_PRODUCT P-->
    <!--        WHERE NUM=#{num}-->
    <!--    </select>-->
    <select id="getUser" resultType="UserVO">

        SELECT
        NUM, NICKNAME,PHONE, ADDRESS,ADDRESS_DETAIL, POINT
        FROM TBL_USER
        WHERE NUM=#{num}
    </select>
    <select id="getProduct" resultType="ProductVO">
    SELECT
        NUM, NAME, CONTENT, PRICE
    FROM TBL_PRODUCT
    WHERE NUM = #{num}
    </select>

    <update id="updateUser">
        UPDATE TBL_USER set
        NICKNAME = #{nickname},
        PHONE = #{phone},
        ADDRESS = #{address},
        ADDRESS_DETAIL = #{addressDetail},
        POINT = #{point}
        WHERE NUM=#{num}
    </update>
    
    <select id="getBetweenOrder" resultType="myOrderDTO">
        SELECT prod.NAME as productName, ord.REGIST_DATE, ord.TOTAL, ord.COUNTING, ord.ADDRESS, ord.ADDRESS_DETAIL, ord.STATUS, ord.ADDRESS_COMMENT, ord.PRODUCT_NUM, ord.USER_NUM as num, ord.NUM as orderNum
	    FROM TBL_ORDER ord, TBL_PRODUCT prod
        WHERE ord.USER_NUM = #{userNum}
        AND ord.PRODUCT_NUM = prod.NUM
        <choose>
            <when test="startDate != null and endDate != null">
                AND (TO_CHAR(ord.REGIST_DATE,'yyyy-mm-dd hh24:mi:ss')) BETWEEN
                #{startDate} AND (#{endDate}||'23:59:59')
            </when>
        </choose>
        ORDER BY ord.REGIST_DATE DESC
    </select>

    <select id="orderProductDetail" resultType="productDTO">
        SELECT prod.NAME as itemName, ord.COUNTING as totalitems, ord.TOTAL as totalpayment, ord.ADDRESS, ord.ADDRESS_DETAIL, ord.PHONE, prod.PRICE as ogprice, ord.ORDER_NAME as NICKNAME
        FROM TBL_PRODUCT prod, TBL_ORDER ord
        WHERE ord.NUM = #{orderNum}  AND ord.PRODUCT_NUM = prod.NUM
    </select>

    <select id="findByOrderNum" resultType="orderVO">
        SELECT NUM, TOTAL, COUNTING, REGIST_DATE, PRODUCT_NUM, USER_NUM, STATUS, ADDRESS_COMMENT, ADDRESS, ADDRESS_DETAIL
        FROM TBL_ORDER
        WHERE NUM=#{orderNUM}
    </select>


    <!--상품 주문-->
    <insert id="orderStore">
        <selectKey keyProperty="num" resultType="long" order="BEFORE">
            SELECT SEQ_ORDER.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_ORDER
        (NUM, ORDER_NAME, TOTAL, COUNTING, PHONE, PRODUCT_NUM, USER_NUM, ADDRESS_COMMENT, ADDRESS, ADDRESS_DETAIL)
        VALUES (#{num}, #{nickName}, #{total}, #{counting}, #{phone}, (SELECT TBL_PRODUCT.NUM FROM TBL_PRODUCT WHERE TBL_PRODUCT.NAME = #{productName}) , #{userNum}, #{addressComment}, #{address}, #{addressDetail})
    </insert>


    <!--상품구입후 유저포인트 차감-->
    <update id="userPointMinus">
        UPDATE TBL_USER
        SET POINT = #{point}
        WHERE NUM = #{num}
    </update>

    <!--상품 구입후 재고 차감-->
    <update id="productMinus">
        UPDATE TBL_PRODUCT
        SET STOCK = #{stock}
        WHERE TBL_PRODUCT.NAME =#{itemname}
    </update>

    <!--상품이름으로 검색-->
    <select id="getDetailByName" resultType="Long">
        SELECT STOCK
        FROM TBL_PRODUCT
        WHERE NAME=#{itemname}
    </select>

    <select id="getOrderDetail" resultType="orderVO">
        SELECT NUM,TOTAL,COUNTING,REGIST_DATE,PRODUCT_NUM,USER_NUM,STATUS,ADDRESS_COMMENT,ADDRESS,ADDRESS_DETAIL,ORDER_NAME,PHONE
        FROM TBL_ORDER
        WHERE NUM=#{orderNum}
    </select>

    <update id="setDelivery">
        UPDATE TBL_ORDER
        SET STATUS='3'
        WHERE NUM=#{orderNum}
    </update>
</mapper>


















